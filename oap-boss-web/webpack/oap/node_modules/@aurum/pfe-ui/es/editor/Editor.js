import React, { useEffect, useRef } from 'react';
import axios from 'axios';
import Edi from 'wangeditor';
import { ConfigProvider } from 'antd';
import { getToken } from '../common/auth';
import Message from '../message';
import InsertHtmlMenu, { menuKey } from './InsertHtmlMenu';
var editor1;
var reqUrl = '/api/inner/docmgmt/doc/file/uploadForAPI';
var defaultMenu = ['head', 'bold', 'italic', 'underline', 'strikeThrough', 'list', 'foreColor', 'fontSize', 'backColor', 'justify', 'indent', 'link', 'image', 'video', 'insertHtmlKey', //   "quote", // 引用
//   "emoticon", // 表情
//   "table", // 表格
//   "code", // 插入代码
'undo', 'redo' // 重复
//   "fontName", // 字体
];
export default (function (props) {
  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var editorRef = useRef(null);
  useEffect(function () {
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    initEditor();
  }, []);

  var initEditor = function initEditor() {
    var _a;

    console.log('editor: ', editorRef.current);
    var elem = editorRef.current; // 注册菜单

    Edi.registerMenu(menuKey, InsertHtmlMenu);
    var editor = new Edi(elem);
    editor1 = editor;
    console.log('editor1: ', editor1);
    editor1.config.zIndex = 5;
    editor1.config.uploadImgServer = reqUrl;
    editor1.config.uploadImgMaxSize = 20 * 1024 * 1024;
    editor1.config.uploadImgAccept = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];
    editor1.config.uploadVideoServer = reqUrl;
    editor1.config.uploadVideoHeaders = {
      Authorization: (_a = getToken()) !== null && _a !== void 0 ? _a : ''
    }; // 配置 onchange 回调函数

    editor1.config.onchange = function (newHtml) {
      console.log('change 之后最新的 html', newHtml); // eslint-disable-next-line @typescript-eslint/no-unused-expressions

      props.onChange && props.onChange(newHtml);
    };

    editor1.config.showLinkVideo = false;
    editor1.config.showLinkImg = false; // 限制一次最多上传 1 张图片

    editor1.config.uploadImgMaxLength = 1;

    editor1.config.customUploadImg = function (files, insert) {
      var _a; // files 是 input 中选中的文件列表


      if (files[0]) {
        var formData = new window.FormData();
        formData.append('file', files[0]);
        formData.append('appCode', 'platform');
        formData.append('fileProp', '1');
        formData.append('dirList', '');
        formData.append('isRandom', '1');
        axios.post(reqUrl, formData, {
          headers: {
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            Authorization: (_a = getToken()) !== null && _a !== void 0 ? _a : ''
          }
        }).then(function (_ref) {
          var data = _ref.data;

          if (data.code === '2000') {
            insert(data.data.fullPath);
          } else {
            Message.error(data.message);
          }
        })["catch"](function (err) {
          console.log('err: ', err);
          Message.error('上传失败');
        });
      } else {
        Message.error('请选择想上传的图片');
      }
    };

    editor1.config.uploadVideoAccept = ['wmv', 'avi', 'mpg', 'mpeg', 'mp4'];

    editor1.config.customUploadVideo = function (files, insertVideoFn) {
      var _a;

      console.log('files: ', files); // resultFiles 是 input 中选中的文件列表
      // insertVideoFn 是获取视频 url 后，插入到编辑器的方法

      if (files[0]) {
        var formData = new window.FormData();
        formData.append('file', files[0]);
        formData.append('appCode', 'platform');
        formData.append('fileProp', '1');
        formData.append('dirList', '');
        formData.append('isRandom', '1');
        axios.post(reqUrl, formData, {
          headers: {
            'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
            Authorization: (_a = getToken()) !== null && _a !== void 0 ? _a : ''
          }
        }).then(function (_ref2) {
          var data = _ref2.data;

          if (data.code === '2000') {
            insertVideoFn(data.data.fullPath);
          } else {
            Message.error(data.message);
          }
        })["catch"](function (err) {
          console.log('err: ', err);
          Message.error('上传失败');
        });
      } else {
        Message.error('请选择想上传的图片');
      }
    }; // 自定义配置颜色（字体颜色、背景色）


    editor.config.colors = ['#000000', '#0000ff', '#800000', '#ff0000', '#f47920', '#ea66a6', '#afdfe4', '#563624', '#3e4145', '#90d7ec', '#ffffff'];
    editor1.config.menus = props.menus || defaultMenu;
    editor1.create();
    editor.txt.html(props.value);
  };

  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(getPrefixCls(), "-editor"),
    ref: editorRef
  });
});