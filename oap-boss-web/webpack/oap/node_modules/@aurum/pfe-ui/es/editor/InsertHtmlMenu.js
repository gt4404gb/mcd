import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React from 'react';
import E from 'wangeditor'; // npm 安装

import Modal from '../modal';
import Input from '../input';
import message from '../message';
var TextArea = Input.TextArea; // 获取必要的变量，这些在下文中都会用到

var $ = E.$,
    BtnMenu = E.BtnMenu;
var newBtnMenu = BtnMenu; // 第一，菜单 class ，Button 菜单继承 BtnMenu class

var InsertHtmlMenu = /*#__PURE__*/function (_newBtnMenu) {
  _inherits(InsertHtmlMenu, _newBtnMenu);

  var _super = _createSuper(InsertHtmlMenu);

  function InsertHtmlMenu(editor) {
    _classCallCheck(this, InsertHtmlMenu);

    // data-title属性表示当鼠标悬停在该按钮上时提示该按钮的功能简述
    var $elem = $("<div class=\"w-e-menu\" data-title=\"\u63D2\u5165html\">\n               <i class=\"w-e-icon-html\"></i>\n            </div>");
    return _super.call(this, $elem, editor);
  } // 菜单点击事件
  // eslint-disable-next-line class-methods-use-this


  _createClass(InsertHtmlMenu, [{
    key: "clickHandler",
    value: function clickHandler() {
      var _this = this;

      // 做任何你想做的事情
      // 可参考【常用 API】文档，来操作编辑器
      Modal.confirm({
        title: '插入Html',
        content: /*#__PURE__*/React.createElement(TextArea, {
          placeholder: "\u8BF7\u8F93\u5165",
          onChange: function onChange(e) {
            _this.val = e.target.value;
          }
        }),
        onOk: function onOk(e) {
          if (!_this.val) {
            message.info('请输入插入内容');
            return;
          }

          _this.editor.txt.append(_this.val);

          e();
        }
      });
    } // 菜单是否被激活（如果不需要，这个函数可以空着）
    // 1. 激活是什么？光标放在一段加粗、下划线的文本时，菜单栏里的 B 和 U 被激活，如下图
    // 2. 什么时候执行这个函数？每次编辑器区域的选区变化（如鼠标操作、键盘操作等），都会触发各个菜单的 tryChangeActive 函数，重新计算菜单的激活状态

  }, {
    key: "tryChangeActive",
    value: function tryChangeActive() {
      // 激活菜单
      // 1. 菜单 DOM 节点会增加一个 .w-e-active 的 css class
      // 2. this.this.isActive === true
      this.active(); // // 取消激活菜单
      // // 1. 菜单 DOM 节点会删掉 .w-e-active
      // // 2. this.this.isActive === false
      // this.unActive()
    }
  }]);

  return InsertHtmlMenu;
}(newBtnMenu);

export default InsertHtmlMenu;
export var menuKey = 'insertHtmlKey';