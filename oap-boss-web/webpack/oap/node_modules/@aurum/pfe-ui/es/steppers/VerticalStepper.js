import _extends from "@babel/runtime/helpers/esm/extends";
import React, { useContext } from 'react';
import { ConfigProvider } from 'antd';
import IconFont from '../common/IconFont';
import { stepperType } from './interface';
export default (function (props) {
  var title = props.title,
      description = props.description,
      titleStyle = props.titleStyle,
      success = props.success,
      type = props.type,
      _props$renderIconNode = props.renderIconNode,
      renderIconNode = _props$renderIconNode === void 0 ? function () {} : _props$renderIconNode,
      width = props.width;

  var _useContext = useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var ringBorderColor = success || process ? '#ffbc0d' : '#eeeeee';
  var lineBorder = success ? 'left-cel-line_success' : 'left-cel-line_other';
  var customizable = type === stepperType.customizable;
  var iconColor = success || process ? '#ffbc0d' : '#eeeeee';
  var verticalMarginTop = success ? '0px' : '1px';
  var currentStyle = {
    '--widthPx': "".concat(width, "px")
  };
  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(getPrefixCls(), "-steppers-stepper-vertical"),
    style: currentStyle
  }, /*#__PURE__*/React.createElement("div", {
    className: "step-container-vertical"
  }, /*#__PURE__*/React.createElement("div", {
    className: "left-cell"
  }, customizable ? /*#__PURE__*/React.createElement("div", {
    className: "left-cell-icon"
  }, /*#__PURE__*/React.createElement(IconFont, {
    type: "icon-zhima",
    className: "zhima_default",
    style: {
      color: iconColor
    }
  })) : /*#__PURE__*/React.createElement("div", {
    className: "left-cell-ring",
    style: {
      borderColor: ringBorderColor
    }
  }), /*#__PURE__*/React.createElement("div", {
    className: "left-cel-line ".concat(lineBorder)
  })), !customizable && /*#__PURE__*/React.createElement("div", {
    className: "head-icon"
  }, renderIconNode()), /*#__PURE__*/React.createElement("div", {
    className: "step-desc-container-vertical",
    style: {
      width: width
    }
  }, /*#__PURE__*/React.createElement("span", {
    style: _extends({}, titleStyle)
  }, title), /*#__PURE__*/React.createElement("span", null, description))), /*#__PURE__*/React.createElement("div", {
    className: "step-vertical ".concat(lineBorder),
    style: {
      marginTop: verticalMarginTop
    }
  }));
});