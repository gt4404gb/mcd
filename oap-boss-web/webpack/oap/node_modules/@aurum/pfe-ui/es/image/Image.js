import _extends from "@babel/runtime/helpers/esm/extends";
import * as React from 'react';
import { Image as AntdImage } from 'antd';
import helper from '../common/helper';
import { ConfigProvider } from 'antd';

var Image = function Image(props) {
  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var copyProps = _extends({}, props); // 头像


  if (props.avatar === 'man') {
    copyProps.src = helper.getImageUrl("/steps/avatar_boy.png");
    copyProps.preview = false;
    copyProps.style = _extends({
      borderRadius: '50%',
      width: '128px',
      height: '128px'
    }, props.style || {});
  } else if (props.avatar === 'woman') {
    copyProps.src = helper.getImageUrl("/steps/avatar_girl.png");
    copyProps.preview = false;
    copyProps.style = _extends({
      borderRadius: '50%',
      width: '128px',
      height: '128px'
    }, props.style || {});
  } else if (typeof props.avatar === 'string') {
    copyProps.src = props.avatar;
    copyProps.preview = false;
    copyProps.style = _extends({
      borderRadius: '50%',
      width: '128px',
      height: '128px'
    }, props.style || {});
  } // 比例


  if (props.scale === '16/9') {
    copyProps.rootClassName = "".concat(getPrefixCls(), "-image-scale ").concat(props.rootClassName || '');
    copyProps.style = _extends({
      height: Number(props.width) * .5625
    }, props.style || {});
  } else if (props.scale === '1/1') {
    copyProps.rootClassName = "".concat(getPrefixCls(), "-image-scale ").concat(props.rootClassName || '');
    copyProps.style = _extends({
      height: props.width || '100%'
    }, props.style || {});
  } else if (props.scale === '4/3') {
    copyProps.rootClassName = "".concat(getPrefixCls(), "-image-scale ").concat(props.rootClassName || '');
    copyProps.style = _extends({
      height: Number(props.width) * .75 || '100%'
    }, props.style || {});
  } else if (props.scale === '3/4') {
    copyProps.rootClassName = "".concat(getPrefixCls(), "-image-scale ").concat(props.rootClassName || '');
    copyProps.style = _extends({
      height: Number(props.width) / 3 * 4 || '100%'
    }, props.style || {});
  }

  var imageNode = /*#__PURE__*/React.createElement(Image, {
    preview: false,
    src: helper.getImageUrl('/default/person/empty-search-result.png')
  });

  if (!props.placeholder) {
    imageNode = false;
  } else if (props.placeholder === '16/9' && props.scale === '16/9') {
    imageNode = /*#__PURE__*/React.createElement(Image, {
      preview: false,
      src: helper.getImageUrl('/occupation/16:9.png')
    });
  } else if (props.placeholder === '4/3' && props.scale === '4/3') {
    imageNode = /*#__PURE__*/React.createElement(Image, {
      preview: false,
      src: helper.getImageUrl('/occupation/4:3.png')
    });
  } else if (props.placeholder === '1/1' && props.scale === '1/1') {
    imageNode = /*#__PURE__*/React.createElement(Image, {
      preview: false,
      src: helper.getImageUrl('/occupation/1:1.png')
    });
  } else if (props.placeholder === '3/4' && props.scale === '3/4') {
    imageNode = /*#__PURE__*/React.createElement(Image, {
      preview: false,
      src: helper.getImageUrl('/occupation/3:4.png')
    });
  } else if (props.placeholder && typeof props.placeholder !== 'string') {
    imageNode = props.placeholder;
  }

  return /*#__PURE__*/React.createElement(AntdImage, _extends({
    fallback: helper.getImageUrl('/default/general/loading-failed.png')
  }, copyProps, {
    placeholder: imageNode,
    className: "".concat(getPrefixCls(), "-image ").concat(props.className || '')
  }));
};

Image.PreviewGroup = AntdImage.PreviewGroup;
export default Image;