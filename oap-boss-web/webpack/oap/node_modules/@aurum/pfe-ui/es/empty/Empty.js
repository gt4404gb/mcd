import _extends from "@babel/runtime/helpers/esm/extends";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import * as React from 'react';
import { Empty as AntdEmpty } from 'antd';
import helper from '../common/helper';
import { ConfigProvider } from 'antd';

var Empty = function Empty(_a) {
  var imgName = _a.imgName,
      props = __rest(_a, ["imgName"]);

  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var imageNode = /*#__PURE__*/React.createElement("img", {
    src: helper.getImageUrl('/default/person/empty-info.png')
  });

  if (!imgName) {
    imageNode = /*#__PURE__*/React.createElement("img", {
      src: helper.getImageUrl('/default/person/empty-info.png')
    });
  } else if (typeof imgName === 'string' && imgName.indexOf('http') === -1) {
    imageNode = /*#__PURE__*/React.createElement("img", {
      src: helper.getImageUrl("/default/".concat(imgName, ".png"))
    });
  }

  var copyProps = _extends({}, props);

  if (props.action) {
    if (typeof props.action === 'string') {
      copyProps.children = /*#__PURE__*/React.createElement("div", {
        className: "".concat(getPrefixCls(), "-sub-desc")
      }, props.action);
    } else {
      copyProps.children = props.action;
    }
  } // cont p = {...props};


  return /*#__PURE__*/React.createElement(AntdEmpty, _extends({
    image: /*#__PURE__*/React.createElement("div", {
      className: "".concat(getPrefixCls(), "-image-style"),
      style: props.imageStyle || {}
    }, imageNode)
  }, copyProps, {
    className: "".concat(getPrefixCls(), "-empty ").concat(props.className || '')
  }));
};

export default Empty;