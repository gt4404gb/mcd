import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
import React, { useContext } from 'react';
import { IconContext } from '../context';
function IconProductionCColorFillComponent(iconProps, ref) {
  var _useContext = useContext(IconContext),
    _useContext$prefixCls = _useContext.prefixCls,
    prefixCls = _useContext$prefixCls === void 0 ? 'aurum' : _useContext$prefixCls;
  var spin = iconProps.spin,
    className = iconProps.className;
  var props = _objectSpread(_objectSpread({
    "aria-hidden": true,
    focusable: false,
    ref: ref
  }, iconProps), {}, {
    className: "".concat(className ? className + ' ' : '').concat(prefixCls, "-icon ").concat(prefixCls, "-icon-type-color-fill ").concat(prefixCls, "-icon-production-c-color-fill")
  });
  if (spin) {
    props.className = "".concat(props.className, " ").concat(prefixCls, "-icon-loading");
  }
  delete props.spin;
  delete props.isIcon;
  return /*#__PURE__*/React.createElement("svg", _extends({
    viewBox: "0 0 48 48",
    fill: "none",
    stroke: "currentColor"
  }, props), /*#__PURE__*/React.createElement("g", {
    fill: "none",
    fillRule: "nonzero",
    stroke: "none",
    strokeWidth: "1"
  }, /*#__PURE__*/React.createElement("path", {
    fill: "#DB0007",
    d: "M42.216 24.793a1.75 1.75 0 0 1 1.7 3.056l-.132.073-3.128 1.569a7.464 7.464 0 0 1-5.84.362l-.284-.107-2.27-.91a3.964 3.964 0 0 0-2.732-.082l-.22.081-2.531 1.015a7.464 7.464 0 0 1-5.259.113l-.299-.113-2.53-1.015a3.964 3.964 0 0 0-2.732-.08l-.22.08-2.27.91a7.464 7.464 0 0 1-5.85-.123l-.275-.131-3.128-1.569a1.75 1.75 0 0 1 1.43-3.19l.138.061 3.129 1.569c.942.472 2.03.549 3.025.219l.227-.084 2.27-.91a7.464 7.464 0 0 1 5.259-.113l.299.113 2.531 1.015c.875.35 1.843.378 2.731.081l.22-.081 2.532-1.015a7.464 7.464 0 0 1 5.258-.113l.3.113 2.27.91c.978.393 2.069.378 3.032-.033l.22-.102 3.129-1.569Z"
  }), /*#__PURE__*/React.createElement("path", {
    fill: "#FFBC0D",
    d: "M41.418 32.618a2.286 2.286 0 0 1 2.286 2.285v.793a5.75 5.75 0 0 1-4.415 5.593c-1.03.246-2.236.453-3.618.622l-.85.097c-.145.016-.292.03-.441.045l-.913.083-.473.038-.977.07-1.018.06-1.061.05-1.104.042-1.145.032-.588.013-1.209.018-1.25.01h-1.283l-1.251-.01-1.209-.018-1.166-.028-.567-.017-1.104-.042-1.06-.05-1.02-.06-.976-.07-.473-.038-.913-.083a58.38 58.38 0 0 1-.44-.045l-.851-.097c-1.382-.169-2.588-.376-3.618-.622a5.75 5.75 0 0 1-4.415-5.593v-.793a2.286 2.286 0 0 1 2.286-2.285h34.836ZM24 4.042c11.473 0 18.328 4.272 19.915 12.779a4.935 4.935 0 0 1-4.635 5.836l-.214.004H8.934a4.934 4.934 0 0 1-4.85-5.836C5.65 8.43 12.342 4.159 23.537 4.045L24 4.042Z"
  })));
}
var IconProductionCColorFill = /*#__PURE__*/React.forwardRef(IconProductionCColorFillComponent);
IconProductionCColorFill.defaultProps = {
  isIcon: true
};
IconProductionCColorFill.displayName = 'IconProductionCColorFill';
export default IconProductionCColorFill;