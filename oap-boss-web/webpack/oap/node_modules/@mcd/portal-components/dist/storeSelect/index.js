import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _regeneratorRuntime from "@babel/runtime/regenerator";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from 'react';
import { Select } from 'antd'; // import {storeQuery} from '@/api/portal/storeAPI';

import * as fetch from '../utils/http';
var Option = Select.Option;
var isOnchange = true;

var StoreSelect = /*#__PURE__*/function (_React$Component) {
  _inherits(StoreSelect, _React$Component);

  var _super = _createSuper(StoreSelect);

  function StoreSelect(props) {
    var _this;

    _classCallCheck(this, StoreSelect);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "storeSearch", /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {
        var response;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                response = null;
                _context.prev = 1;
                _context.next = 4;
                return fetch['get']('/store/manager/store/query/all', {
                  store: value
                }, '/api/inner/store');

              case 4:
                response = _context.sent;

                _this.setState({
                  storeArr: response.data.content
                });

                _context.next = 11;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context["catch"](1);
                new Error(_context.t0);

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, null, [[1, 8]]);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());

    _defineProperty(_assertThisInitialized(_this), "onChange", function (value) {
      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(value);
      }
    });

    _this.state = {
      value: '',
      storeArr: []
    };
    return _this;
  }

  _createClass(StoreSelect, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.storeSearch();
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(Select, {
        showSearch: true,
        placeholder: $t('store_lbl_Search_Store'),
        optionFilterProp: "children",
        onChange: this.onChange,
        filterOption: function filterOption(input, option) {
          return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;
        },
        allowClear: true
      }, "\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0", this.state.storeArr.map(function (val) {
        return /*#__PURE__*/React.createElement(Option, {
          value: val.storeCode,
          key: val.storeCode
        }, "".concat(val.storeNameCn, "\xA0").concat(val.storeNameEn, "\xA0").concat(val.storeCode));
      }), "\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0");
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var derivedStates = {};

      if (nextProps && nextProps.value && prevState && prevState.selected) {
        if (nextProps.value.toString() !== prevState.selected.toString() && !isOnchange) {
          derivedStates = {
            selected: nextProps.value
          };
        }
      }

      return derivedStates;
    }
  }]);

  return StoreSelect;
}(React.Component);

export default StoreSelect;