import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { DatePicker } from 'antd';
import PropTypes from 'prop-types';
import moment from 'moment';
var RangePicker = DatePicker.RangePicker;

var RangePickerSelect = /*#__PURE__*/function (_PureComponent) {
  _inherits(RangePickerSelect, _PureComponent);

  var _super = _createSuper(RangePickerSelect);

  function RangePickerSelect(props) {
    var _this;

    _classCallCheck(this, RangePickerSelect);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "onChange", function (dates) {
      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(dates.map(function (item) {
          return item.format('YYYY-MM-DD HH:mm:ss');
        }));
      }
    });

    return _this;
  }

  _createClass(RangePickerSelect, [{
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement(RangePicker, {
        style: {
          width: '100%'
        },
        onChange: this.onChange,
        placeholder: typeof window.$t === 'function' ? [$t('startRangePickerSelect'), $t('endRangePickerSelect')] : ['请选择', '请选择'],
        showTime: true,
        format: "YYYY-MM-DD HH:mm:ss"
      });
    }
  }]);

  return RangePickerSelect;
}(PureComponent);

RangePickerSelect.defaultProps = {
  disabled: false,
  value: []
};
RangePickerSelect.propTypes = {
  /** 是否禁用 */
  disabled: PropTypes.bool,

  /** 指定选中项， 受控 */
  value: PropTypes.array,

  /** 选择完成后的回调 */
  onChange: PropTypes.func
};
RangePickerSelect.displayName = 'Cascader丨时间区间';
export default RangePickerSelect;