import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from "react";
import "./index.less";
import { DatePicker, TimePicker, Button, Row, Col } from "antd";
import IconDel from "../icon-del";
import ErrorTip from "../error-tips";
import moment from "moment";
import { getTimestamp } from "../../utils/format";
var RangePicker = TimePicker.RangePicker;

var DateTimeSection = /*#__PURE__*/function (_React$Component) {
  _inherits(DateTimeSection, _React$Component);

  var _super = _createSuper(DateTimeSection);

  function DateTimeSection(props) {
    var _this;

    _classCallCheck(this, DateTimeSection);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "initDefineTimeSection", function (saveModel) {
      if (saveModel.timeSegments.length > 0) {
        _this.state.defineTimeSection = saveModel.timeSegments.map(function (_, index) {
          _.key = index;
          return _;
        });
        _this.state.errTipArr = saveModel.timeSegments.map(function (_, index) {
          var t = {
            key: index,
            dateTip: "",
            timeTip: ""
          };
          return t;
        });
      } else {
        _this.state.defineTimeSection.splice(0, _this.state.defineTimeSection.length);

        _this.state.errTipArr.splice(0, _this.state.errTipArr.length);

        var tmp = {
          date: "",
          startTime: "",
          endTime: "",
          key: "0"
        };

        _this.state.defineTimeSection.push(tmp);

        _this.state.errTipArr.push({
          key: "0",
          dateTip: "",
          timeTip: ""
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "addDefineEffectTime", function () {
      var _this$state = _this.state,
          defineTimeSection = _this$state.defineTimeSection,
          errTipArr = _this$state.errTipArr;
      var minKey = defineTimeSection[0].key;
      defineTimeSection.forEach(function (_) {
        if (_.key > minKey) {
          minKey = _.key;
        }
      });
      var tmp = {
        date: "",
        startTime: "",
        endTime: "",
        key: Number(minKey) + 1
      };
      defineTimeSection.push(tmp);
      errTipArr.push({
        key: Number(minKey) + 1,
        dateTip: "",
        timeTip: ""
      });

      _this.setState({
        defineTimeSection: defineTimeSection,
        errTipArr: errTipArr
      });
    });

    _defineProperty(_assertThisInitialized(_this), "checkDefineTimeSection", function () {
      return new Promise(function (resolve, reject) {
        var _this$state2 = _this.state,
            defineTimeSection = _this$state2.defineTimeSection,
            errTipArr = _this$state2.errTipArr; //必填校验

        defineTimeSection.forEach(function (item, index) {
          var errIndex = errTipArr.findIndex(function (_) {
            return _.key == item.key;
          });

          if (item.date == "" || item.startTime == "" || item.endTime == "") {
            errTipArr[errIndex].dateTip = item.date == "" ? "请输入" : "";
            errTipArr[errIndex].timeTip = item.startTime == "" || item.endTime == "" ? "请输入" : "";
          }
        });
        var needCheck = false;
        errTipArr.forEach(function (_) {
          needCheck = needCheck || _.dateTip != "" || _.timeTip != "";
        });

        if (needCheck) {
          _this.setState({
            errTipArr: _toConsumableArray(errTipArr.map(function (_) {
              return Object.assign({}, _);
            }))
          }, function () {
            return reject();
          });

          return;
        } //重复项检测


        var repeatCheck = false;

        var tmpArr = _toConsumableArray(defineTimeSection);

        tmpArr.forEach(function (t, tIndex) {
          var dIndex = defineTimeSection.findIndex(function (_) {
            return _.key != t.key && (getTimestamp(_.date + " " + _.startTime) == getTimestamp(t.date + " " + t.startTime) && getTimestamp(_.date + " " + _.endTime) == getTimestamp(t.date + " " + t.endTime) || getTimestamp(_.date + " " + _.startTime) < getTimestamp(t.date + " " + t.endTime) && getTimestamp(_.date + " " + _.startTime) >= getTimestamp(t.date + " " + t.startTime) || getTimestamp(_.date + " " + _.endTime) >= getTimestamp(t.date + " " + t.startTime) && getTimestamp(_.date + " " + _.endTime) < getTimestamp(t.date + " " + t.endTime));
          });

          if (dIndex != -1) {
            errTipArr[tIndex].dateTip = "重叠时间段";
            errTipArr[tIndex].timeTip = "重叠时间段";
            errTipArr[dIndex].dateTip = "重叠时间段";
            errTipArr[dIndex].timeTip = "重叠时间段";
          }
        }); // 开始结束时间检查

        tmpArr.forEach(function (s, sIndex) {
          var date = s.date;

          if (date.length == 2) {
            date = "2020-10-".concat(s.date);
          }

          var start = getTimestamp(date + " " + s.startTime);
          var end = getTimestamp(date + " " + s.endTime);

          if (start == end && start != "") {
            errTipArr[sIndex].timeTip = "开始结束时间相同";
          }
        });
        errTipArr.forEach(function (_) {
          repeatCheck = repeatCheck || _.dateTip != "" || _.timeTip != "";
        });

        if (repeatCheck) {
          _this.setState({
            errTipArr: _toConsumableArray(errTipArr.map(function (_) {
              return Object.assign({}, _);
            }))
          }, function () {
            return reject();
          });

          return;
        }

        resolve();
      });
    });

    _defineProperty(_assertThisInitialized(_this), "delOnClick", function (record) {
      var _this$state3 = _this.state,
          defineTimeSection = _this$state3.defineTimeSection,
          errTipArr = _this$state3.errTipArr;
      var index = defineTimeSection.findIndex(function (_) {
        return _.key == record.key;
      });
      defineTimeSection.splice(index, 1);
      errTipArr.splice(index, 1);

      _this.setState({
        defineTimeSection: defineTimeSection,
        errTipArr: errTipArr
      });

      _this.props.onDelete && _this.props.onDelete(record);
    });

    _defineProperty(_assertThisInitialized(_this), "dateOnChange", function (value, record) {
      var _this$state4 = _this.state,
          defineTimeSection = _this$state4.defineTimeSection,
          errTipArr = _this$state4.errTipArr;
      var index = defineTimeSection.findIndex(function (_) {
        return _.key == record.key;
      });
      defineTimeSection[index].date = value.replace(/\//g, "-");
      errTipArr[index].dateTip = "";

      _this.setState({
        defineTimeSection: defineTimeSection,
        errTipArr: errTipArr
      }, function () {
        _this.props.onChange && _this.props.onChange(_toConsumableArray(defineTimeSection));
      });
    });

    _defineProperty(_assertThisInitialized(_this), "timeOnChange", function (value, record) {
      var _this$state5 = _this.state,
          defineTimeSection = _this$state5.defineTimeSection,
          timeFormat = _this$state5.timeFormat,
          errTipArr = _this$state5.errTipArr;
      var index = defineTimeSection.findIndex(function (_) {
        return _.key == record.key;
      });
      defineTimeSection[index].startTime = value ? value[0].format(timeFormat) : "";
      defineTimeSection[index].endTime = value ? value[1].format(timeFormat) : "";
      errTipArr[index].timeTip = "";

      _this.setState({
        defineTimeSection: _toConsumableArray(defineTimeSection),
        errTipArr: errTipArr
      }, function () {
        _this.props.onChange && _this.props.onChange(defineTimeSection);
      });
    });

    _this.props.bind && _this.props.bind(_assertThisInitialized(_this));
    _this.state = {
      defineTimeSection: [],
      initialValue: _this.props.saveModel,
      editable: _this.props.editable !== undefined ? _this.props.editable : true,
      errTipArr: [],
      timeFormat: _this.props.timeFormat || "HH:mm:ss",
      dateFormat: _this.props.dateFormat || "YYYY/MM/DD"
    };

    _this.initDefineTimeSection(_this.state.initialValue);

    return _this;
  }
  /**
   *  初始化部分参数
   */


  _createClass(DateTimeSection, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (nextProps.dateFormat) {
        this.state.dateFormat = nextProps.dateFormat;
      }

      if (nextProps.saveModel) {
        this.initDefineTimeSection(nextProps.saveModel);
        this.state.initialValue = _objectSpread({}, nextProps.saveModel);
      }

      if (nextProps.editable != null) {
        this.state.editable = nextProps.editable;
      }
    }
    /**
     * 添加时间项
     *
     */

  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$state6 = this.state,
          defineTimeSection = _this$state6.defineTimeSection,
          dateFormat = _this$state6.dateFormat,
          timeFormat = _this$state6.timeFormat,
          errTipArr = _this$state6.errTipArr,
          editable = _this$state6.editable;
      return /*#__PURE__*/React.createElement("div", {
        className: "defineEffectTimeSectionWrap"
      }, defineTimeSection.map(function (_, index) {
        var errMsg = errTipArr.find(function (err) {
          return err.key == _.key;
        });
        return /*#__PURE__*/React.createElement(Row, {
          key: index,
          gutter: 20,
          style: {
            marginBottom: "15px"
          }
        }, /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(ErrorTip, {
          message: errMsg.dateTip
        }, /*#__PURE__*/React.createElement(DatePicker, {
          format: dateFormat,
          disabled: !editable,
          suffixIcon: null,
          key: "date_".concat(_.key),
          onChange: function onChange(value, dateString) {
            return _this2.dateOnChange(dateString, _);
          },
          defaultValue: dateFormat == "DD" ? _.monthDay ? moment(_.monthDay, dateFormat) : "" : _.date ? moment(_.date, dateFormat) : ""
        }))), /*#__PURE__*/React.createElement(Col, null, /*#__PURE__*/React.createElement(ErrorTip, {
          message: errMsg.timeTip
        }, /*#__PURE__*/React.createElement(RangePicker, {
          suffixIcon: null,
          disabled: !editable,
          key: "picker_".concat(_.key),
          defaultValue: _.startTime && _.endTime ? [moment(_.startTime, timeFormat), moment(_.endTime, timeFormat)] : null,
          format: timeFormat,
          onChange: function onChange(value) {
            return _this2.timeOnChange(value, _);
          }
        }))), /*#__PURE__*/React.createElement(Col, {
          style: {
            lineHeight: 0,
            position: "relative"
          }
        }, index == 0 ? "" : editable ? /*#__PURE__*/React.createElement(IconDel, {
          onClick: function onClick() {
            return _this2.delOnClick(_);
          }
        }) : ""));
      }), editable ? /*#__PURE__*/React.createElement("div", {
        style: {
          marginTop: "20px"
        }
      }, /*#__PURE__*/React.createElement(Button, {
        type: "primary",
        onClick: function onClick() {
          return _this2.addDefineEffectTime();
        }
      }, "\u6DFB\u52A0\u751F\u6548\u65E5")) : "");
    }
  }]);

  return DateTimeSection;
}(React.Component);

export { DateTimeSection as default };