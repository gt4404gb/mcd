import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { Input, Button, Typography } from 'antd';
import PropTypes from 'prop-types';
var TextArea = Input.TextArea;
var Text = Typography.Text,
    Title = Typography.Title;

var ApprovalOpinion = /*#__PURE__*/function (_PureComponent) {
  _inherits(ApprovalOpinion, _PureComponent);

  var _super = _createSuper(ApprovalOpinion);

  function ApprovalOpinion() {
    var _this;

    _classCallCheck(this, ApprovalOpinion);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "overwriteProps", function () {
      var props = _objectSpread({}, _this.props); // 将非TextArea的props删除


      delete props.tip;
      delete props.onAgree;
      delete props.onReject;
      delete props.onBack;
      return props;
    });

    return _this;
  }

  _createClass(ApprovalOpinion, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          tip = _this$props.tip,
          onAgree = _this$props.onAgree,
          onReject = _this$props.onReject,
          onBack = _this$props.onBack;
      var props = this.overwriteProps();
      var tipLang = window.$t ? $t('portal_approval_tip') : '审核拒绝时，审核原因为必填';
      return /*#__PURE__*/React.createElement("div", {
        className: "common-edit"
      }, /*#__PURE__*/React.createElement(Title, {
        level: 3
      }, window.$t ? $t('lbl_approval_opinion') : '审批意见'), /*#__PURE__*/React.createElement(TextArea, props), /*#__PURE__*/React.createElement("div", {
        style: {
          margin: '20px 0 30px'
        }
      }, /*#__PURE__*/React.createElement(Text, {
        type: "danger"
      }, "*", tip || tipLang)), /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(Button, {
        type: "primary",
        onClick: onAgree
      }, window.$t ? $t('btn_agree') : '同意'), /*#__PURE__*/React.createElement(Button, {
        type: "primary",
        danger: true,
        onClick: onReject
      }, window.$t ? $t('btn_reject') : '拒绝'), /*#__PURE__*/React.createElement(Button, {
        onClick: onBack
      }, window.$t ? $t('btn_back') : '返回')));
    }
  }]);

  return ApprovalOpinion;
}(PureComponent);

ApprovalOpinion.propTypes = {
  /** 文本框的值变化时的回调 */
  onChange: PropTypes.func,

  /** 提示信息 */
  tip: PropTypes.string,

  /** 同意事件 */
  onAgree: PropTypes.func,

  /** 拒绝事件 */
  onReject: PropTypes.func,

  /** 返回事件 */
  onBack: PropTypes.func
};
ApprovalOpinion.displayName = 'ApprovalOpinion丨审批意见';
export default ApprovalOpinion;