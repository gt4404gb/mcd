import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from "react";
import "./index.less";
import { Checkbox, Row, Col } from "antd";
import PropTypes from "prop-types";

var CheckBoxGroup = /*#__PURE__*/function (_React$Component) {
  _inherits(CheckBoxGroup, _React$Component);

  var _super = _createSuper(CheckBoxGroup);

  function CheckBoxGroup(props) {
    var _this;

    _classCallCheck(this, CheckBoxGroup);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "onChange", function (checkedValues) {
      _this.props.onChange && _this.props.onChange(checkedValues);
    });

    _this.state = {
      checkList: props.checkList ? _toConsumableArray(props.checkList) : [{
        dictLabelCn: "A",
        dictLabelEn: "Aa",
        dictValue: "A"
      }, {
        dictLabelCn: "B",
        dictLabelEn: "Bb",
        dictValue: "B"
      }, {
        dictLabelCn: "C",
        dictLabelEn: "Cc",
        dictValue: "C"
      }, {
        dictLabelCn: "D",
        dictLabelEn: "Dd",
        dictValue: "D"
      }, {
        dictLabelCn: "E",
        dictLabelEn: "Ee",
        dictValue: "E"
      }, {
        dictLabelCn: "F",
        dictLabelEn: "Ff",
        dictValue: "F"
      }, {
        dictLabelCn: "G",
        dictLabelEn: "Gg",
        dictValue: "G"
      }, {
        dictLabelCn: "H",
        dictLabelEn: "Hh",
        dictValue: "H"
      }, {
        dictLabelCn: "I",
        dictLabelEn: "Ii",
        dictValue: "I"
      }],
      local: props.local || "cn",
      span: props.span || 4,
      value: props.value ? _toConsumableArray(props.value) : []
    };
    return _this;
  }

  _createClass(CheckBoxGroup, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      var local = this.state.local;

      if (nextProps.local && nextProps.local != local) {
        this.state.local = local;
      }

      if (nextProps.checkList && nextProps.checkList.length > 0) {
        this.state.checkList = _toConsumableArray(nextProps.checkList);
      }

      if (nextProps.value && nextProps.value.length > 0) {
        this.state.value = _toConsumableArray(nextProps.value);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          checkList = _this$state.checkList,
          local = _this$state.local,
          span = _this$state.span,
          value = _this$state.value;

      var renderCheckList = _toConsumableArray(checkList.map(function (_) {
        var tmp = {
          dictLabel: local == "cn" ? _.dictLabelCn : _.dictLabelEn,
          dictValue: _.dictValue
        };
        return tmp;
      }));

      return /*#__PURE__*/React.createElement("div", {
        className: "checkBoxGroupWrap"
      }, /*#__PURE__*/React.createElement(Checkbox.Group, {
        style: {
          width: "100%"
        },
        onChange: this.onChange,
        defaultValue: _toConsumableArray(value)
      }, /*#__PURE__*/React.createElement(Row, null, renderCheckList.map(function (_, index) {
        return /*#__PURE__*/React.createElement(Col, {
          span: span,
          key: index
        }, /*#__PURE__*/React.createElement(Checkbox, {
          value: _.dictValue
        }, _.dictLabel));
      }))));
    }
  }]);

  return CheckBoxGroup;
}(React.Component);

export { CheckBoxGroup as default };
CheckBoxGroup.propTypes = {
  /** checkBox 国际化 */
  local: PropTypes.string,

  /** checkBox渲染列表 */
  checkList: PropTypes.array.isRequired,

  /** checkBox间隔 */
  span: PropTypes.number,

  /** checkbox value */
  value: PropTypes.array
};