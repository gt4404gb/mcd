import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React from "react";
import { Input } from "antd";
import PropTypes from "prop-types";
var reg = /^[0-9]+\.?[0-9]*$/;

var NumberInput = /*#__PURE__*/function (_React$Component) {
  _inherits(NumberInput, _React$Component);

  var _super = _createSuper(NumberInput);

  function NumberInput(_props) {
    var _this;

    _classCallCheck(this, NumberInput);

    _this = _super.call(this, _props);

    _defineProperty(_assertThisInitialized(_this), "initValue", function (props) {
      if (typeof props.value != "undefined" && (reg.test(props.value) || props.value == "" || props.value == ".")) {
        _this.state.value = props.value ? String(props.value) : "";
      }

      if (typeof props.precision != "undefined") {
        _this.state.precision = props.precision;
      }

      if (typeof props.max != "undefined") {
        _this.state.max = props.max;
      }

      if (typeof props.min != "undefined") {
        _this.state.min = props.min;
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (e) {
      var value = e.target.value;

      if (reg.test(value) || value == "" || value == ".") {
        _this.setState({
          value: String(value)
        });

        _this.props.onChange && _this.props.onChange(value);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "checkFloatValue", function (_ref) {
      var value = _ref.value,
          min = _ref.min,
          max = _ref.max,
          precision = _ref.precision;
      var res = true;
      var tmpArr = value.split(".");

      if (value < min || value > max || tmpArr.length > 1 && tmpArr[1].split("").length > precision) {
        res = false;
      }

      return res;
    });

    _defineProperty(_assertThisInitialized(_this), "onBlur", function () {
      var _this$props = _this.props,
          value = _this$props.value,
          onBlur = _this$props.onBlur,
          onChange = _this$props.onChange;

      if (reg.test(value) || value == "" || value == ".") {
        var _this$state = _this.state,
            precision = _this$state.precision,
            max = _this$state.max,
            min = _this$state.min;

        if (precision > 0) {
          value = Number(value).toFixed(precision);
        }

        if (typeof max != "undefined") {
          value = Number(value) > max ? max : value;
        }

        if (typeof min != "undefined") {
          value = Number(value) < min ? min : value;
        }

        var tmp = {
          target: {
            value: value
          }
        };

        _this.onChange(_objectSpread({}, tmp));
      }

      if (onBlur) {
        onBlur();
      }
    });

    _this.props.bind && _this.props.bind(_assertThisInitialized(_this));
    _this.state = {
      value: "",
      precision: -1,
      max: undefined,
      min: undefined
    };

    _this.initValue(_objectSpread({}, _props));

    return _this;
  }

  _createClass(NumberInput, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      this.initValue(_objectSpread({}, nextProps));
    }
  }, {
    key: "render",
    value: function render() {
      var value = this.state.value;
      return /*#__PURE__*/React.createElement(Input, {
        value: value,
        style: this.props.style ? this.props.style : {},
        className: this.props.className ? this.props.className : "",
        onChange: this.onChange,
        onBlur: this.onBlur,
        disabled: this.props.disabled
      });
    }
  }]);

  return NumberInput;
}(React.Component);

export { NumberInput as default };
NumberInput.propTypes = {
  precision: PropTypes.number,
  max: PropTypes.number,
  min: PropTypes.number
};