import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { Tag } from 'antd';
import './index.less';
import PropTypes from 'prop-types';

var CheckableTag = /*#__PURE__*/function (_PureComponent) {
  _inherits(CheckableTag, _PureComponent);

  var _super = _createSuper(CheckableTag);

  function CheckableTag() {
    var _this;

    _classCallCheck(this, CheckableTag);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      value: _this.props.value || []
    });

    _defineProperty(_assertThisInitialized(_this), "checkedFn", function (tag) {
      var _this$state$value;

      return ((_this$state$value = _this.state.value) === null || _this$state$value === void 0 ? void 0 : _this$state$value.indexOf(tag)) > -1;
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (tag, checked) {
      var value = _this.state.value;
      var nextSelectedTags = checked ? [].concat(_toConsumableArray(value), [tag]) : value.filter(function (t) {
        return t !== tag;
      });

      _this.setState({
        value: nextSelectedTags
      });

      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(nextSelectedTags);
      }
    });

    return _this;
  }

  _createClass(CheckableTag, [{
    key: "render",
    value: function render() {
      var _this$props$options,
          _this2 = this;

      return /*#__PURE__*/React.createElement("div", {
        className: "checkable-tap-wrap"
      }, (_this$props$options = this.props.options) === null || _this$props$options === void 0 ? void 0 : _this$props$options.map(function (tag) {
        return /*#__PURE__*/React.createElement(Tag.CheckableTag, {
          key: tag,
          checked: _this2.checkedFn(tag),
          onChange: function onChange(checked) {
            return _this2.onChange(tag, checked);
          }
        }, _this2.checkedFn(tag) ? /*#__PURE__*/React.createElement("i", {
          className: "iconfont iconselect"
        }, tag) : tag);
      }));
    }
  }]);

  return CheckableTag;
}(PureComponent);

CheckableTag.propTypes = {
  /** 显示的数据 */
  options: PropTypes.array.isRequired,

  /** 已选择的tag */
  value: PropTypes.array,

  /** 已选择项变更后的回调 */
  onChange: PropTypes.func
};
CheckableTag.displayName = 'CheckableTag丨可选标签';
export default CheckableTag;