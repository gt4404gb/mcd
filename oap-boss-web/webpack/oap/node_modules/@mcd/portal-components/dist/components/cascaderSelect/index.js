import _toConsumableArray from "@babel/runtime/helpers/toConsumableArray";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _regeneratorRuntime from "@babel/runtime/regenerator";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent, Component } from 'react';
import { Select } from 'antd';
import PropTypes from 'prop-types';
import { getAllRegion } from '../../api/sysAPI';
var isOnchange = true;

var CascaderSelect = /*#__PURE__*/function (_PureComponent) {
  _inherits(CascaderSelect, _PureComponent);

  var _super = _createSuper(CascaderSelect);

  function CascaderSelect(props) {
    var _this;

    _classCallCheck(this, CascaderSelect);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "state", {
      options: {},
      province: [],
      city: [],
      area: [],
      selected: []
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      var isLocal = _this.setStorage();

      if (!isLocal) {
        _this.fechData();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "setStorage", function () {
      var province = localStorage.getItem('provinceSelect');

      if (province) {
        _this.setState({
          options: JSON.parse(province)
        });

        _this.adapterpProvinceData(JSON.parse(province));

        return true;
      }

      return false;
    });

    _defineProperty(_assertThisInitialized(_this), "fechData", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var res;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return getAllRegion();

            case 2:
              res = _context.sent;

              if (res.code === '2000') {
                _this.setState({
                  options: res.data
                });

                localStorage.setItem('provinceSelect', JSON.stringify(res.data));

                _this.adapterpProvinceData(res.data);
              }

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    })));

    _defineProperty(_assertThisInitialized(_this), "adapterpProvinceData", function (arg) {
      var province = Object.keys(arg['000000']).map(function (key) {
        return {
          label: arg['000000'][key],
          value: key
        };
      });

      _this.setState({
        province: province
      }, function () {
        _this.setCityValue();
      });
    });

    _defineProperty(_assertThisInitialized(_this), "setCityValue", function () {
      if (!_this.props.value || _this.props.value.length === 0) {
        return;
      }

      setTimeout(function () {
        _this.handleCityonChange(_this.props.value[0], 'city');

        _this.handleCityonChange(_this.props.value[1], 'area');

        _this.handleAreaOnchange(_this.props.value[2]);
      }, 0);
    });

    _defineProperty(_assertThisInitialized(_this), "selected", function () {
      return {
        'city': function city(value) {
          var selected = _toConsumableArray(_this.state.selected);

          selected[0] = value, selected[1] = undefined, selected[2] = undefined;

          _this.setState({
            selected: selected
          });
        },
        'area': function area(value) {
          var selected = _toConsumableArray(_this.state.selected);

          selected[1] = value, selected[2] = undefined;

          _this.setState({
            selected: selected
          });
        }
      };
    });

    _defineProperty(_assertThisInitialized(_this), "handleCityonChange", function (value, type) {
      _this.selected()[type](value);

      if (!value) {
        return;
      }

      isOnchange = true;

      _this.setState({
        isOnchange: true
      });

      var arg = {};
      arg[type] = Object.keys(_this.state.options[value]).map(function (key) {
        return {
          label: _this.state.options[value][key],
          value: key
        };
      });

      _this.setState(arg, function () {
        return isOnchange = false;
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleAreaOnchange", function (value) {
      isOnchange = true;

      var selected = _toConsumableArray(_this.state.selected);

      selected[2] = value;

      _this.setState({
        selected: selected
      }, function () {
        return _this.onChange(selected);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "onChange", function (selectedKeys) {
      isOnchange = false;

      if (typeof _this.props.onChange === 'function') {
        var selectedOptions = [{
          label: _this.state.options['000000'][selectedKeys[0]],
          value: selectedKeys[0]
        }, {
          label: _this.state.options[selectedKeys[0]][selectedKeys[1]],
          value: selectedKeys[1]
        }, {
          label: _this.state.options[selectedKeys[1]][selectedKeys[2]],
          value: selectedKeys[2]
        }];

        _this.props.onChange(selectedKeys, selectedOptions);
      }
    });

    return _this;
  }

  _createClass(CascaderSelect, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return /*#__PURE__*/React.createElement("div", {
        style: this.props.style
      }, /*#__PURE__*/React.createElement(Select, {
        onChange: function onChange(value) {
          return _this2.handleCityonChange(value, 'city');
        },
        placeholder: "\u8BF7\u9009\u62E9\u7701",
        allowClear: true,
        value: this.state.selected[0],
        disabled: this.props.disabled,
        style: {
          marginRight: '3px',
          width: 'calc(100% / 3 - 2px)'
        }
      }, this.state.province.map(function (item) {
        return /*#__PURE__*/React.createElement(Select.Option, {
          key: item.value,
          value: item.value
        }, item.label);
      })), /*#__PURE__*/React.createElement(Select, {
        onChange: function onChange(value) {
          return _this2.handleCityonChange(value, 'area');
        },
        placeholder: "\u8BF7\u9009\u62E9\u5E02",
        allowClear: true,
        value: this.state.selected[1],
        style: {
          marginRight: '3px',
          width: 'calc(100% / 3 - 2px)'
        },
        disabled: this.props.disabled
      }, this.state.city.map(function (item) {
        return /*#__PURE__*/React.createElement(Select.Option, {
          key: item.value,
          value: item.value
        }, item.label);
      })), /*#__PURE__*/React.createElement(Select, _defineProperty({
        placeholder: "\u8BF7\u9009\u62E9\u533A",
        allowClear: true,
        value: this.state.selected[2],
        onChange: this.handleAreaOnchange,
        style: {
          minWidth: '100px'
        },
        disabled: this.props.disabled
      }, "style", {
        width: 'calc(100% / 3 - 2px)'
      }), this.state.area.map(function (item) {
        return /*#__PURE__*/React.createElement(Select.Option, {
          key: item.value,
          value: item.value
        }, item.label);
      })));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var derivedStates = {};

      if ((nextProps === null || nextProps === void 0 ? void 0 : nextProps.value.toString()) !== prevState.selected.toString() && !isOnchange) {
        derivedStates = {
          selected: nextProps.value,
          city: nextProps !== null && nextProps !== void 0 && nextProps.value[0] ? Object.keys(prevState.options[nextProps.value[0]]).map(function (key) {
            return {
              label: prevState.options[nextProps.value[0]][key],
              value: key
            };
          }) : [],
          area: nextProps !== null && nextProps !== void 0 && nextProps.value[1] ? Object.keys(prevState.options[nextProps.value[1]]).map(function (key) {
            return {
              label: prevState.options[nextProps.value[1]][key],
              value: key
            };
          }) : []
        };
      }

      return derivedStates;
    }
  }]);

  return CascaderSelect;
}(PureComponent);

_defineProperty(CascaderSelect, "defaultProps", {
  options: {},
  value: [],
  disabled: false,
  style: {}
});

CascaderSelect.propTypes = {
  /** 是否禁用 */
  disabled: PropTypes.bool,

  /** 指定选中项， 受控 */
  value: PropTypes.array,

  /** 选择完成后的回调，即省市区变化触发 */
  onChange: PropTypes.func,

  /** 可选项数据源 */
  options: PropTypes.object,

  /** 控件样式 */
  style: PropTypes.object
};
CascaderSelect.displayName = 'CascaderSelect丨省市区选择框';
export default CascaderSelect;