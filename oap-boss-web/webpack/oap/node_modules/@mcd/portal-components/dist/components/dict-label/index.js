import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { getLocalItem, Constants } from '../../utils/cache';
import { getDictionary } from '../../utils/DictUtil';
import { checkLocaleIsCn } from '../../utils/common';

var DictLabel = /*#__PURE__*/function (_Component) {
  _inherits(DictLabel, _Component);

  var _super = _createSuper(DictLabel);

  function DictLabel(props) {
    var _this;

    _classCallCheck(this, DictLabel);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "getList", function (data) {
      var type = _this.props.type + _this.props.value;

      _this.setState({
        name: checkLocaleIsCn() ? data[type].dictLabelCn : data[type].dictLabelEn
      });
    });

    _this.state = {
      name: '',
      typeList: []
    };
    return _this;
  }

  _createClass(DictLabel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var data = getLocalItem(Constants.DICTIONARY) || {};

      if (data && Object.keys(data).length > 0) {
        this.getList(data);
      } else {
        var request = [getDictionary('DICTIONARY')];
        Promise.all(request).then(function (res) {
          _this2.getList(res[0]);
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return /*#__PURE__*/React.createElement("span", null, this.state.name);
    }
  }]);

  return DictLabel;
}(Component);

DictLabel.propTypes = {
  /** 字典类型 如：sys\_yes\_no */
  type: PropTypes.string.isRequired,

  /** 默认值 */
  value: PropTypes.string.isRequired
};
DictLabel.displayName = 'DictLabel丨字典标签';
export default DictLabel;