import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Select } from 'antd';
import { getLocalItem, setLocalItem, Constants } from '../../utils/cache';
import { searchApplicationList } from '../../api/sysAPI';

var ApplicationSelect = /*#__PURE__*/function (_Component) {
  _inherits(ApplicationSelect, _Component);

  var _super = _createSuper(ApplicationSelect);

  function ApplicationSelect(props) {
    var _this;

    _classCallCheck(this, ApplicationSelect);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "onChange", function (val) {
      if (typeof _this.props.onChange === 'function') {
        _this.props.onChange(val);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "getList", function (application) {
      var options = [];

      for (var key in application) {
        if (application.hasOwnProperty(key)) {
          options.push({
            label: application[key],
            value: key,
            key: key + application[key]
          });
        }
      }

      _this.setState({
        typeList: options
      });
    });

    _this.state = {
      typeList: [],
      value: _this.props.value
    };
    return _this;
  }

  _createClass(ApplicationSelect, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      this.setState(_objectSpread(_objectSpread({}, this.props), nextProps));
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var application = getLocalItem(Constants.APPLICATION);

      if (application) {
        this.getList(application);
      } else {
        searchApplicationList().then(function (response) {
          var name_code_mapping = {};
          response.data.forEach(function (v) {
            name_code_mapping[v.code] = v.name;
          });
          setLocalItem(Constants.APPLICATION, name_code_mapping);

          _this2.getList(name_code_mapping);
        })["catch"](function (error) {
          console.log(error);
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          disabled = _this$props.disabled,
          multiple = _this$props.multiple;
      var _this$state = this.state,
          value = _this$state.value,
          typeList = _this$state.typeList;
      return /*#__PURE__*/React.createElement(Select, {
        placeholder: window.$t ? $t('pf_lbl_plz_select') : '请选择',
        options: typeList,
        value: value,
        mode: multiple ? 'multiple' : null,
        disabled: disabled,
        onChange: this.props.onChange,
        allowClear: true
      });
    }
  }]);

  return ApplicationSelect;
}(Component);

ApplicationSelect.propTypes = {
  /** 是否多选 */
  multiple: PropTypes.bool,

  /** 是否禁用 */
  disabled: PropTypes.bool,

  /** 默认根据此属性值进行筛选 */
  value: PropTypes.string,

  /** 选择后的返回值 */
  onChange: PropTypes.func
};
ApplicationSelect.defaultProps = {
  multiple: false,
  disabled: false
};
ApplicationSelect.displayName = 'ApplicationSelect丨应用名称';
export default ApplicationSelect;