import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
var _excluded = ["forwardedref"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

import React, { PureComponent } from 'react';
import { Form as Component } from 'antd';

var HOC = /*#__PURE__*/function (_PureComponent) {
  _inherits(HOC, _PureComponent);

  var _super = _createSuper(HOC);

  function HOC() {
    _classCallCheck(this, HOC);

    return _super.apply(this, arguments);
  }

  _createClass(HOC, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          forwardedref = _this$props.forwardedref,
          rest = _objectWithoutProperties(_this$props, _excluded);

      return /*#__PURE__*/React.createElement(Component, _extends({
        ref: forwardedref
      }, rest));
    }
  }]);

  return HOC;
}(PureComponent);

var Form = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(HOC, _extends({}, props, {
    forwardedref: ref
  }));
});
Form.useForm = Component.useForm;
Form.Item = Component.Item;
Form.List = Component.List;
Form.Provider = Component.Provider;
Form.displayName = 'Form丨表单';
export default Form;