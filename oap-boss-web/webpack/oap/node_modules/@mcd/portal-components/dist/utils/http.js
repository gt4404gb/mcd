import request from './newRequest';
var BASE_API = '/api/inner/platform';

function sendHttpRequest(requests) {
  var showLoading = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return new Promise(function (resolve, reject) {
    requests.then(function (response) {
      if (response.code === '2000' || response.code === 'SUCCESS') {
        resolve(response); // 返回成功
      } else {
        reject(response);
      }
    })["catch"](function (e) {
      reject(e);
    });
  });
}

export function post(url, param, prefixUrl) {
  var showLoading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (arguments[2] === void 0) {
    prefixUrl = BASE_API;
  }

  return sendHttpRequest(request({
    url: prefixUrl + url,
    method: 'post',
    data: param ? param : ''
  }), showLoading);
}
export function put(url, param, prefixUrl) {
  var showLoading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (arguments[2] === void 0) {
    prefixUrl = BASE_API;
  }

  return sendHttpRequest(request({
    url: prefixUrl + url,
    method: 'put',
    data: param ? param : ''
  }), showLoading);
}
export function deletes(url, param, prefixUrl) {
  var showLoading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (arguments[2] === void 0) {
    prefixUrl = BASE_API;
  }

  return sendHttpRequest(request({
    url: prefixUrl + url,
    method: 'delete',
    data: param ? param : ''
  }), showLoading);
}
export function get(url, param) {
  var prefixUrl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BASE_API;
  var showLoading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (arguments[2] === void 0) {
    prefixUrl = BASE_API;
  }

  return sendHttpRequest(request({
    url: prefixUrl + url,
    method: 'get',
    params: param ? param : ''
  }), showLoading);
}
export function post_param(url, param, prefixUrl) {
  var showLoading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

  if (arguments[2] === void 0) {
    prefixUrl = BASE_API;
  }

  return sendHttpRequest(request({
    url: prefixUrl + url,
    method: 'post',
    params: param ? param : ''
  }), showLoading);
}