import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _regeneratorRuntime from "@babel/runtime/regenerator";

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * @param  {Props} modelCode formCode
 * @return {Function} validation function
 * @author ethan.yan
 */
import React, { Component } from 'react';
import { Row, Col, Tabs, Divider, Form, Button, message, Spin, Descriptions } from '../../index';
import { withRouter } from 'react-router-dom';
import moment from 'moment';
import { withTranslation } from 'react-i18next';
import { getDictionaryLabel } from '../../utils/DictUtil';
import { getFormGroupDetail } from '../../api/mek/dataformAPI';
var TabPane = Tabs.TabPane;

var DynamicDetail = /*#__PURE__*/function (_Component) {
  _inherits(DynamicDetail, _Component);

  var _super = _createSuper(DynamicDetail);

  function DynamicDetail() {
    var _this;

    _classCallCheck(this, DynamicDetail);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      // tab的数据
      tabList: [],
      // 对应tab的相关表单
      tabFormList: {},
      // 是否显示tab
      showTab: false,
      // 页面是否加载中
      loading: false
    });

    _defineProperty(_assertThisInitialized(_this), "initData", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
      var res;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _this.setState({
                loading: true
              });

              _context.prev = 1;
              _context.next = 4;
              return getFormGroupDetail({
                modelCode: _this.props.modelCode,
                formCode: _this.props.formCode || ''
              });

            case 4:
              res = _context.sent;

              _this.adapterData(res.data);

              _context.next = 11;
              break;

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](1);
              message.error('获取数据失败');

            case 11:
              _this.setState({
                loading: false
              });

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[1, 8]]);
    })));

    _defineProperty(_assertThisInitialized(_this), "adapterData", function (data) {
      var tabList = data.map(function (item) {
        return {
          tab: item.groupName,
          key: item.groupId,
          language: item.groupNameEncoding
        };
      });
      var showTab = data.length === 1 ? data[0].showTab : true;
      var tabFormList = {};
      data.forEach(function (item) {
        tabFormList[item.groupId] = item.groupModelList.map(function (item, index) {
          return {
            columnNum: item.columnNum,
            groupName: item.groupName,
            groupKey: item.groupId,
            groupLanguage: item.groupNameEncoding,
            groupList: item.itemModelList.map(function (itemMode) {
              var _itemMode$property;

              if (!_this.props.hiddenFields.includes(itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property = itemMode.property) === null || _itemMode$property === void 0 ? void 0 : _itemMode$property.code)) {
                return _this._getFormAttr(itemMode);
              } else {
                return undefined;
              }
            }).filter(function (item) {
              return item !== undefined;
            })
          };
        });
      });

      _this.setState({
        tabList: tabList,
        showTab: showTab,
        tabFormList: tabFormList
      });
    });

    _defineProperty(_assertThisInitialized(_this), "_getFormAttr", function (itemMode) {
      var _itemMode$property2, _itemMode$property3, _itemMode$property4, _itemMode$property5, _itemMode$property6, _itemMode$property7, _itemMode$property8, _itemMode$property9, _itemMode$property10, _itemMode$property11, _itemMode$property12, _itemMode$property13;

      var property = {};
      property['type'] = itemMode === null || itemMode === void 0 ? void 0 : itemMode.type;
      property['formType'] = itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property2 = itemMode.property) === null || _itemMode$property2 === void 0 ? void 0 : _itemMode$property2.type;
      property['language'] = itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property3 = itemMode.property) === null || _itemMode$property3 === void 0 ? void 0 : _itemMode$property3.languageEncoding;
      property['optionDataSource'] = itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property4 = itemMode.property) === null || _itemMode$property4 === void 0 ? void 0 : _itemMode$property4.optionDataSource;
      property['dictName'] = itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property5 = itemMode.property) === null || _itemMode$property5 === void 0 ? void 0 : _itemMode$property5.dictName;
      property['defaultValue'] = (itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property6 = itemMode.property) === null || _itemMode$property6 === void 0 ? void 0 : _itemMode$property6.defaultValue) || _this.props.initialValues[itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property7 = itemMode.property) === null || _itemMode$property7 === void 0 ? void 0 : _itemMode$property7.code]; // selectorType  1-单选  2-复选框  否则是下拉（0-下拉单选 3-下拉多选）

      if ((itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property8 = itemMode.property) === null || _itemMode$property8 === void 0 ? void 0 : _itemMode$property8.type) === '3' && (itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property9 = itemMode.property) === null || _itemMode$property9 === void 0 ? void 0 : _itemMode$property9.selectorType) === '1') {
        property['formType'] = '3_1';
      }

      if ((itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property10 = itemMode.property) === null || _itemMode$property10 === void 0 ? void 0 : _itemMode$property10.type) === '3' && (itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property11 = itemMode.property) === null || _itemMode$property11 === void 0 ? void 0 : _itemMode$property11.selectorType) === '2') {
        property['formType'] = '3_2';
      }

      if ((itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property12 = itemMode.property) === null || _itemMode$property12 === void 0 ? void 0 : _itemMode$property12.type) === '4' && (itemMode === null || itemMode === void 0 ? void 0 : (_itemMode$property13 = itemMode.property) === null || _itemMode$property13 === void 0 ? void 0 : _itemMode$property13.selectorType) === '1') {
        property['formType'] = '4_1';
      }

      return property;
    });

    _defineProperty(_assertThisInitialized(_this), "valueEnum", {
      '4undefined': function undefined(value) {
        return value ? moment(value).format('YYYY-MM-DD HH:mm:ss') : '';
      },
      '32': function _(value, dictName) {
        return getDictionaryLabel(dictName, value);
      },
      '3_12': function _12(value, dictName) {
        return getDictionaryLabel(dictName, value);
      },
      '3_22': function _22(value, dictName) {
        return getDictionaryLabel(dictName, value);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "setValue", function (value, formType, dictName) {
      if (typeof _this.valueEnum[formType] === 'function') {
        return _this.valueEnum[formType](value, dictName);
      }

      return value;
    });

    _defineProperty(_assertThisInitialized(_this), "_renderDetail", function (props, propsIndex) {
      var t = _this.props.t;
      return /*#__PURE__*/React.createElement("div", {
        key: props.groupKey || Math.random()
      }, propsIndex != 0 && /*#__PURE__*/React.createElement(Divider, {
        style: {
          margin: 0
        }
      }), /*#__PURE__*/React.createElement(Descriptions, {
        title: t(props === null || props === void 0 ? void 0 : props.groupLanguage) || '',
        layout: "vertical",
        column: props.columnNum
      }, props.groupList.map(function (item) {
        return /*#__PURE__*/React.createElement(Descriptions.Item, {
          key: item.language,
          label: t(item.language)
        }, /*#__PURE__*/React.createElement("span", {
          dangerouslySetInnerHTML: {
            __html: _this.setValue(item.defaultValue, "".concat(item.formType).concat(item.optionDataSource), item.dictName)
          }
        }), item.oldValue ? /*#__PURE__*/React.createElement("span", {
          style: {
            textDecoration: 'line-through'
          }
        }, "\xA0\xA0", _this.setValue(item.oldValue, "".concat(item.formType).concat(item.optionDataSource), item.dictName)) : '');
      })));
    });

    _defineProperty(_assertThisInitialized(_this), "_renderForm", function (props, tabKey) {
      if (!props) {
        return;
      }

      return /*#__PURE__*/React.createElement(Row, {
        key: tabKey
      }, props.map(function (item, index) {
        return _this._renderDetail(item, index);
      }));
    });

    _defineProperty(_assertThisInitialized(_this), "_renderTabs", function (props) {
      var t = _this.props.t;
      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tabs, null, props.map(function (item) {
        return /*#__PURE__*/React.createElement(TabPane, {
          tab: t(item.language),
          key: item.key
        }, _this._renderForm(_this.state.tabFormList[item.key], item.key));
      })));
    });

    _defineProperty(_assertThisInitialized(_this), "_handleGoBack", function () {
      _this.props.history.goBack(-1);
    });

    return _this;
  }

  _createClass(DynamicDetail, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.initData();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.modelCode !== prevProps.modelCode || this.props.formCode !== prevProps.formCode) {
        this.initData();
      }
    } // 向后端请求数据

  }, {
    key: "render",
    value: function render() {
      var _tabList$, _tabList$2;

      var props = this.props;
      var _this$state = this.state,
          showTab = _this$state.showTab,
          tabList = _this$state.tabList,
          tabFormList = _this$state.tabFormList;
      return /*#__PURE__*/React.createElement("div", {
        style: {
          background: '#fff',
          padding: '20px'
        }
      }, /*#__PURE__*/React.createElement(Spin, {
        spinning: this.state.loading,
        delay: 500
      }, showTab ? this._renderTabs(tabList) : this._renderForm(tabFormList[(_tabList$ = tabList[0]) === null || _tabList$ === void 0 ? void 0 : _tabList$.key], (_tabList$2 = tabList[0]) === null || _tabList$2 === void 0 ? void 0 : _tabList$2.key), (tabList.length > 0 || tabFormList.length > 0) && /*#__PURE__*/React.createElement(Button, {
        type: "default",
        onClick: this._handleGoBack
      }, "\u8FD4\u56DE")));
    }
  }]);

  return DynamicDetail;
}(Component);

DynamicDetail.defaultProps = {
  modelCode: '',
  formCode: '',
  initialValues: {},
  oldInitialValues: {},
  hiddenFields: []
};
export default withTranslation()(withRouter(DynamicDetail));