import _extends from "@babel/runtime/helpers/esm/extends";
import React, { useContext } from 'react';
import { ConfigProvider } from 'antd';
import IconFont from '../common/IconFont';
export default (function (props) {
  var stepIndex = props.stepIndex,
    renderIconNode = props.renderIconNode,
    success = props.success,
    process = props.process,
    titleStyle = props.titleStyle,
    title = props.title,
    totalLength = props.totalLength;
  var _useContext = useContext(ConfigProvider.ConfigContext),
    getPrefixCls = _useContext.getPrefixCls;
  var stepContainer = "".concat(getPrefixCls(), "-step-horizontal-default-prefix-cls");
  var successColor = success ? 'success_bg_color' : 'other_bg_color';
  var processColor = process ? 'success_bg_color' : 'other_bg_color';
  var fontColor = success || process ? 'success_process_color' : 'other_color';
  var stepDescColor = process ? 'step_desc_process' : 'step_desc_other';
  var startNode = function startNode() {
    return /*#__PURE__*/React.createElement("div", {
      className: "node-contain start-contain"
    }, /*#__PURE__*/React.createElement("div", {
      className: "icon-container"
    }, /*#__PURE__*/React.createElement(IconFont, {
      type: "icon-zuobiaoxing",
      className: "icon-back ".concat(fontColor)
    }), renderIconNode()), /*#__PURE__*/React.createElement("div", {
      className: "start-step-line ".concat(successColor)
    }), /*#__PURE__*/React.createElement("div", {
      className: "step-desc-container start-desc",
      style: _extends({}, titleStyle)
    }, /*#__PURE__*/React.createElement("span", null, title)));
  };
  var endNode = function endNode() {
    return /*#__PURE__*/React.createElement("div", {
      className: "end_container node-contain"
    }, /*#__PURE__*/React.createElement("div", {
      className: "icon-container end-icon-container-left"
    }, /*#__PURE__*/React.createElement(IconFont, {
      type: "icon-zuobiaoxing",
      className: "icon-back ".concat(fontColor)
    }), renderIconNode({
      customStatus: process || success ? 'success' : ''
    })), /*#__PURE__*/React.createElement("div", {
      className: "end-success-step-line ".concat(process ? 'success_bg_color' : 'other_bg_color')
    }), /*#__PURE__*/React.createElement("div", {
      className: "step-desc-container",
      style: _extends({}, titleStyle)
    }, /*#__PURE__*/React.createElement("span", null, title)));
  };
  var centerNode = function centerNode() {
    return /*#__PURE__*/React.createElement("div", {
      className: "node-contain default_horizontal_center"
    }, /*#__PURE__*/React.createElement("div", {
      className: "icon-container end-icon-container-left"
    }, /*#__PURE__*/React.createElement(IconFont, {
      type: "icon-zuobiaoxing",
      className: "icon-back ".concat(fontColor)
    }), renderIconNode()), process ? /*#__PURE__*/React.createElement("div", {
      className: "center-process-line-container"
    }, /*#__PURE__*/React.createElement("div", {
      className: "center-process-step-line ".concat(processColor)
    }, /*#__PURE__*/React.createElement("div", {
      className: "line-right"
    }))) : /*#__PURE__*/React.createElement("div", {
      className: "center-success-step-line ".concat(successColor)
    }), /*#__PURE__*/React.createElement("div", {
      className: "step-desc-container ".concat(stepDescColor),
      style: _extends({}, titleStyle)
    }, /*#__PURE__*/React.createElement("span", null, title)));
  };
  var renderHorizontalStep = function renderHorizontalStep(index) {
    switch (index) {
      case 1:
        return startNode();
      case totalLength:
        return endNode();
      default:
        return centerNode();
    }
  };
  return /*#__PURE__*/React.createElement("div", {
    className: stepContainer
  }, renderHorizontalStep(stepIndex));
});