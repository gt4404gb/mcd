import _extends from "@babel/runtime/helpers/esm/extends";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import * as React from 'react';
import { Tag as AntTag, ConfigProvider } from 'antd';
import IconFont from '../common/IconFont';
var Tag = /*#__PURE__*/React.forwardRef(function (_a, ref) {
  var fontColor = _a.fontColor,
      rest = __rest(_a, ["fontColor"]);

  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  var statusList = ['default', 'success', 'processing', 'error', 'warning'];
  var hasStyle = !!(rest.color && statusList.includes(rest.color)); // 主题style优先级最高

  return /*#__PURE__*/React.createElement(AntTag, _extends({}, rest, {
    style: {
      color: !hasStyle ? fontColor : ''
    },
    className: "".concat(rest.closable ? "".concat(getPrefixCls, "-tag-padding") : ''),
    closeIcon: /*#__PURE__*/React.createElement(IconFont, {
      style: {
        color: !rest.color && !fontColor || hasStyle ? '' : fontColor || '#fff'
      },
      type: "icon-guanbi"
    }),
    ref: ref
  }));
});
Tag.displayName = AntTag.displayName;
Tag.CheckableTag = AntTag.CheckableTag;
export default Tag;