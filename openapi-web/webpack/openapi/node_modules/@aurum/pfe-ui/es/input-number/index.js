import _extends from "@babel/runtime/helpers/esm/extends";

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

import * as React from 'react';
import { ConfigProvider, InputNumber as AntdInputNumber } from 'antd';
import IconFont from '../common/IconFont';
var InputNumber = /*#__PURE__*/React.forwardRef(function (_a, ref) {
  var priceMode = _a.priceMode,
      rest = __rest(_a, ["priceMode"]);

  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
      getPrefixCls = _React$useContext.getPrefixCls;

  return /*#__PURE__*/React.createElement(AntdInputNumber, _extends({}, rest, {
    className: "".concat(priceMode ? " ".concat(getPrefixCls(), "-input-number-price") : '').concat(rest.className ? " ".concat(rest.className) : ''),
    controls: priceMode ? false : {
      upIcon: /*#__PURE__*/React.createElement(IconFont, {
        type: "icon-xiangshang"
      }),
      downIcon: /*#__PURE__*/React.createElement(IconFont, {
        type: "icon-xiangxia"
      })
    },
    ref: ref
  }));
});
export default InputNumber;