import { getLocalItem, Constants } from './cache'; // 花括号必须成对出现，sentence为需要替换的字符串

export function replaceAllKeyToValue(sentence) {
  if (!sentence) {
    return '';
  }

  sentence = sentence.split('{');
  var value = sentence[0];

  for (var i = 1; i < sentence.length; i++) {
    var key = sentence[i].split('}');
    value += (getLangValue(key[0]) || "{".concat(key[0], "}")) + key[1];
  }

  return value;
} // 使用方式：1. 录入 portal_test_placeholder  请输入{0}-{1}位数字，调用方法 getLangValue('portal_test_placeholder',[9,34])
// 2. 录入 portal_test_placeholder_prop  {name}数量不能超过{number} ，调用方法 getLangValue('portal_test_placeholder_prop',{name:"人员",number:43})

export function getLangValue(key, placeholder) {
  var dataObject = getLocalItem(Constants.I18N_DATA);
  var locale = getLocalItem(Constants.LOCALE) || 'cn';

  if (dataObject) {
    var localeData = dataObject[locale];
    var langData = localeData.multilang;
    var result = langData[key];

    if (result) {
      result = formatI18N(result, placeholder);
    } else {
      result = key;
    }

    return result;
  }

  return key;
}
export function formatI18N(value, placeholder) {
  if (!value) {
    return '';
  }

  if (!placeholder) {
    return value;
  }

  if (Array.isArray(placeholder)) {
    for (var i = 0; i < placeholder.length; i++) {
      value = value.replace(new RegExp('\\{' + i + '\\}', 'g'), placeholder[i]);
    }

    return value;
  } else {
    for (var key in placeholder) {
      value = value.replace(new RegExp('\\{' + key + '\\}', 'g'), placeholder[key]);
    }

    return value;
  }
}